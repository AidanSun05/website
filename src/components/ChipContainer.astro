---
interface Tag {
  name: string;
  count: number;
}

interface Props {
  tags: string | Tag[];
}

const { tags } = Astro.props;
const tagsList = typeof tags === "string" ? tags.split(" ") : tags;
---

<div class="chip-container">
  {
    tagsList.map((tag) =>
      typeof tag === "string" ? (
        <a class="chip" href={`/articles/tag/${tag}/`}>
          {tag}
        </a>
      ) : (
        <a class="chip flex" href={`/articles/tag/${tag.name}/`}>
          <span class="name">{tag.name}</span>
          <span class="count">{tag.count}</span>
        </a>
      )
    )
  }
</div>

<style>
  .chip-container {
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    justify-content: flex-start;
    gap: 4px;

    .chip {
      border: 2px solid #777;
      border-radius: 4px;
      background-color: #ddd;
      text-decoration: none;
      color: black;
    }

    .chip:not(.flex) {
      padding: 2px;
    }

    .chip.flex {
      display: flex;

      span {
        padding: 2px;
      }

      .name {
        border-right: 2px solid #777;
      }

      .count {
        background-color: #aaa;
      }
    }
  }
</style>
