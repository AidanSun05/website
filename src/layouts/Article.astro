---
import "@styles/asciidoc.pcss";
import "@fortawesome/fontawesome-free/css/solid.css";
import "@fortawesome/fontawesome-free/css/fontawesome.css";
import BaseLayout from "./BaseLayout.astro";
import ChipContainer from "@components/ChipContainer.astro";
import { getImage, Image } from "astro:assets";
import type { ImageMetadata, MarkdownHeading } from "astro";
import { formatDate } from "@common/articles";
import path from "path";

interface Frontmatter {
  doctitle: string;
  description: string;
  image?: ImageMetadata;
  revdate: Date;
  tags: string;
  stylesheets?: string;
}

interface Props {
  frontmatter: Frontmatter;
  headings: MarkdownHeading[];
}

const { doctitle, description, image, revdate, tags, stylesheets } = Astro.props.frontmatter;
const { headings } = Astro.props;
const imageURL = image ? (await getImage({ src: image })).src : undefined;
---

<BaseLayout title={doctitle} {description} {stylesheets} {imageURL}>
  <h1>{doctitle}</h1>
  {image && <Image src={image} height="350" alt="Article thumbnail" />}
  <p>Published <time datetime={revdate.toISOString()}>{formatDate(revdate)}</time></p>
  <p><a href={`/pdf/${path.basename(Astro.url.pathname)}.pdf`} class="download-pdf">Download PDF</a></p>
  <ChipContainer tags={tags} />
  <aside id="headings">
    <strong>Contents</strong>
    <nav>
      {headings.map((h) => <a href={`#${h.slug}`} style={{ marginLeft: `${h.depth - 1}em` }}>{h.text}</a>)}
    </nav>
  </aside>
  <p>{description}</p>
  <slot />
</BaseLayout>

<style>
  .download-pdf {
    text-decoration: none;
    background-color: #888;
    border: 2px solid #555;
    color: #fff;
    padding: 4px 8px;
  }

  @media (max-width: 999px) {
    #headings {
      margin-top: 1em;
    }
  }

  @media (min-width: 1000px) {
    #headings {
      position: fixed;
      top: 1em;
      right: 1em;
      width: 350px;
    }
  }

  #headings {
    padding: 4px;
    border: 1px solid;

    strong {
      display: block;
      text-align: center;
      margin-bottom: 1em;
    }

    nav {
      display: flex;
      flex-direction: column;
      align-items: stretch;

      a {
        padding: 4px;
        transition: 0.2s;
        text-decoration: none;
        color: black;

        &:hover {
          background-color: #aaa;
        }
      }
    }
  }
</style>
