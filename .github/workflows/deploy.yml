name: Deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    branches: [ "main" ]

env:
  REGISTRY_NAME: website-registry
  TAG: ${{ github.sha }}
  SSH_USERNAME: ${{ secrets.SSH_USERNAME }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true
      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v2
      - name: Build images
        run: |
          docker buildx create --use --driver=docker-container
          docker buildx bake -f docker-compose.yml -f docker-compose.prod.yml --set *.cache-to="type=gha,mode=max" --set *.cache-from="type=gha" --load
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Log into Container Registry
        run: doctl registry login --expiry-seconds 600
      - name: Remove all old images
        working-directory: ./scripts
        run: |
          chmod +x remove-images.sh
          ./remove-images.sh
        shell: bash
      - name: Push to Container Registry
        run: docker compose -f docker-compose.yml -f docker-compose.prod.yml push
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Copy Docker Compose files
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: docker-compose.yml,docker-compose.prod.yml
          target: /home/${{ secrets.SSH_USERNAME }}/website
          overwrite: true
      - name: Deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          envs: REGISTRY_NAME,{{ secrets.DIGITALOCEAN_ACCESS_TOKEN }},{{ secrets.SSH_USERNAME }},TAG,EMAIL,SSH_USERNAME
          script: |
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com
            cd /home/${{ secrets.SSH_USERNAME }}/website
            docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d
